@import "function.scss";



@mixin dFlexRow($juscon, $alitems) {
  display: flex;
  justify-content: $juscon;
  align-items: $alitems;
  flex-wrap: wrap;
}

@mixin dFlexColumn($juscon, $alitems) {
  display: flex;
  flex-direction: column;
  justify-content: $juscon;
  align-items: $alitems;
  flex-wrap: wrap;
}

@mixin dgrid($columncount, $columnsize) {
  display: grid;
  grid-template-columns: repeat($columncount, $columnsize);
}

@mixin lineBeforeAfter($width, $height, $background) {
  @extend %before-after-line;
  width: $width;
  height: $height;
  background: $background;
}

@mixin adaptiveValue(
  $property,
  $startSize,
  $minSize,
  $type,
  $maxWidth,
  $maxWidthContainer
) {
  $addSize: $startSize - $minSize;
  @if $type == 1 {
    // Якщо менше контейнера
    #{$property}: $startSize + px;
    @media (min-width: #{$maxWidth + px}) {
      #{$property}: calc(
        #{$minSize + px} + #{$addSize} *
          ((100vw - 360px) / #{$maxWidthContainer - 380})
      );
    }
  } @else if $type == 2 {
    // Якщо більше контейнера
    #{$property}: $startSize + px;
    @media (max-width: #{$maxWidth + px}) {
      #{$property}: calc(
        #{$minSize + px} + #{$addSize} * ((100vw - 380px) / #{$maxWidth - 360})
      );
    }
  } @else {
    // Завжди
    #{$property}: calc(
      #{$minSize + px} + #{$addSize} * ((100vw - 380px) / #{$maxWidth - 360})
    );
  }
}


@mixin adaptiveFont($pcSize, $mobSize, $maxWidth, $bp) {
	$addSize: $pcSize - $mobSize;
	$addMobSize: $addSize + $addSize * 0.7;
  $remSize: rem($pcSize);
  $remMobSize: rem($mobSize);

	@media (max-width: $bp + px) {
		font-size: calc(#{$remMobSize} + #{$addMobSize} * ((100vw - 380px) / #{$maxWidth}));
	}
	@media (min-width: $bp + px) {
		font-size: calc(#{$remMobSize} + #{$addSize} * (100vw / #{$maxWidth}));
	}
}