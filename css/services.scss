@import "extends.scss";
@import "mixins.scss";
@import "variable.scss";
@import "function.scss";

.services__wrapper {
  @include dFlexColumn(center, stretch);
  row-gap: rem(20);
  flex-wrap: nowrap;
  // @include adaptiveValue("margin-bottom", 100, 50, 0, $maxWidth, $minWidth);
}

.services__about {
  background-color: $colorLightGrey;
  color: $colorDarkGrey;
  .services__submenu {
    padding: rem(30) 0 0 0;
  }
  .menu__list {
    @include adaptiveValue("column-gap", 60, 20, 0, $maxWidth, $minWidth);
    row-gap: rem(30);
    .menu__item {
      transition: transform 0.3s ease-in-out 0s;
      &:hover {
        transform: scale(1.2);
        transition: transform 0.3s ease-in-out 0s;
      }
    }
  }
  .main__title {
    line-height: 1;
    text-align: start;
  }
}

.services__about__content {
  @include adaptiveValue("row-gap", 50, 20, 0, $maxWidth, $minWidth);
  .content__subtitle,
  .content__text {
    color: $colorDarkGrey;
  }
  .content__text {
    p {
      margin-bottom: rem(20);
    }
  }
}

.services__description__content {
  flex-direction: column;
  @include adaptiveValue("row-gap", 100, 50, 0, $maxWidth, $minWidth);
  &.content {
    .content__item {
      justify-content: center;
      @include adaptiveValue("row-gap", 40, 20, 0, $maxWidth, $minWidth);
    }
  }
  ul {
    li {
      border: 2px $colorBlue solid;
    }
  }
}
.services__description__objective,
.services__description__progress {
  width: 100%;
}

.services__description__categories {
  @include adaptiveValue("margin-bottom", 100, 50, 0, $maxWidth, $minWidth);
  .content__item.item {
    flex-direction: column;
    align-items: flex-start;
  }
  .categories__title {
    &::after {
      @include lineBeforeAfter(rem(80), 2px, $colorBlack);
      margin: rem(20) 0 0 0;
    }
  }
  .content__list {
    justify-self: flex-start;
    gap: rem(10) rem(20);
    li {
      border: none;
    }
  }
}

.services__description__progress {
  margin: 0 0 rem(50) 0;
  &.cards {
    grid-template-columns: repeat(auto-fit, minmax(rem(340), 1fr));
    gap: rem(10) rem(20);
    .cards__item {
      border: 2px $colorBlue solid;
      grid-template: 1fr / 1fr;
      @include adaptiveValue("padding-top", 30, 2, 0, $maxWidth, $minWidth);
      @include adaptiveValue("padding-left", 50, 20, 0, $maxWidth, $minWidth);
      @include adaptiveValue("padding-right", 50, 20, 0, $maxWidth, $minWidth);
      @include adaptiveValue("padding-bottom", 30, 2, 0, $maxWidth, $minWidth);
    }

    .text__link {
      color: $colorBlue;
      font-size: rem(28);
      font-weight: 600;
      span {
        font-size: rem(46);
        font-weight: 800;
      }
    }
  }
}

.services__description__solutions {
  &.cards {
    background-color: $colorLightGrey;
    // grid-template-columns: repeat(auto-fit, minmax(rem(340), 1fr));
    justify-content: center;
    gap: rem(30) rem(20);
    .cards__item {
      @include adaptiveValue("padding", 30, 0, 0, $maxWidth, $minWidth);
      .item__title {
        font-size: rem(28);
        font-weight: 600;
        &::after {
          @include lineBeforeAfter(rem(80), 2px, $colorBlack);
          margin: rem(10) 0 0 0;
        }
      }
      .item__text__text {
        font-weight: 800;
      }
    }
  }
}

.services__description__partners {
  .indicators__cards__container {
    background-color: $colorLightGrey;
    @include adaptiveValue("padding", 30, 0, 0, $maxWidth, $minWidth);
  }
  .indicators__title {
    margin: 0 0 rem(30) 0;
  }
  .indicators__cards {
    &.cards {
      grid-template-columns: repeat(auto-fit, minmax(rem(340), 1fr));
      width: 100%;
    }
  }
  .cards__item {
    padding: rem(10);
  }
  .item__text {
    .text__title {
      text-align: start;
    }
    .text__list {
      margin: 0 0 0 rem(10);
    }
    .list__item {
      border: none;
      list-style: disc;
      margin: 0 0 0 rem(10);
    }
  }
}

// Global components
/*==========================================*/
.about {
  .about__title {
    margin: 0 0 rem(20) 0;
  }
  @include adaptiveValue("padding-top", 100, 60, 0, $maxWidth, $minWidth);
  @include adaptiveValue("padding-bottom", 50, 30, 0, $maxWidth, $minWidth);
  .text {
    .text__content {
      &:not(:last-child) {
        padding: 0 0 rem(20) 0;
      }
    }
    .text__title {
      font-size: rem(28);
      font-weight: 700;
      text-transform: uppercase;
    }
    .text__list {
      margin: 0 0 0 rem(20);
      .list__item {
        list-style: disc;
      }
    }
  }
}
.objective {
  .objective__item {
    .item__list {
      gap: rem(10);
      .list__item {
        @include dFlexRow(center, center);
        color: $colorBlue;
        grid-template: 1fr / 1fr;
        text-align: center;
        justify-items: center;
        align-items: center;
        padding: rem(15) rem(20);
        min-height: rem(150);
        width: 100%;
        @media (min-width: rem($bp6)) {
          max-width: rem(200);
        }
      }
    }
  }
}

.indicators {
  width: 100%;

  .indicators__title {
    text-align: center;
    .title__text {
      font-size: rem(28);
      font-weight: 700;
    }
  }
  .cards {
    gap: rem(50) rem(50);
  }
  .cards__item {
    gap: rem(10);
    .item__title {
      &::after {
        @include lineBeforeAfter(rem(80), 2px, $colorBlack);
        margin: rem(10) 0 0 0;
      }
    }
    .text__text {
      text-align: start;
    }
  }
}

.services__description__indicators {
  .indicators__title {
    @include adaptiveValue("margin-bottom", 100, 50, 0, $maxWidth, $minWidth);
  }
}

.services__description__activites {
  .item__text {
    @include dFlexRow(flex-start, flex-start);
    gap: rem(20);
    text-transform: uppercase;
  }
  .places {
    .item__text {
      flex-direction: column;
    }
    .icons__item {
      background-color: $colorDarkGrey;
      border: none;
      transition: all 0.3s ease-in-out 0.1s;
      &:hover {
        background-color: $colorLightGrey;
        transition: all 0.3s ease 0s;
        .icons__link {
          color: $colorBlue;
        }
      }
    }
    .icons__link {
      color: $mainColor;
      transition: all 0.3s ease-in-out 0.1s;
    }
  }
}
/*==========================================*/
.products {
  width: 100%;
  .cards {
    grid-template-columns: repeat(auto-fit, minmax(rem(270), 1fr));
    gap: rem(50) rem(30);
    justify-items: center;
  }
  .products__title {
    margin: 0 0 rem(50) 0;
  }
  .cards__item {
    grid-template: minmax(rem(80), max-content) auto 1fr auto / 1fr;
    row-gap: rem(20);
    border: none;
    max-width: rem(270);
    .item__image {
      width: 100%;
      max-height: rem(375);
    }
    .item__title {
      font-size: rem(28);
      font-weight: 700;
    }
    .text__title {
      font-weight: 800;
      &::after {
        @include lineBeforeAfter(rem(80), 2px, $colorBlack);
        margin: rem(10) 0 0 0;
      }
    }
  }
}

.solutions {
  background-color: $colorLightGrey;
  padding: rem(30);
  &.content {
    flex-direction: column;
    align-items: center;
  }
  .solutions__cards {
    background-color: $colorBlack;
    gap: 1px 1px;
  }
  .solutions__title {
    margin: 0 0 rem(20) 0;
  }
  .content__item {
    flex: auto;
    background-color: $colorLightGrey;
    padding: rem(20) rem(50);

    @media (max-width: rem($bp6)) {
      padding: rem(20) rem(5);
    }
    .item__text {
      text-transform: uppercase;
    }
  }
}

.services__cards {
  color: $mainColor;
  .cards__slides__item {
    @include adaptiveValue("padding-top", 40, 20, 0, $maxWidth, $minWidth);
    @include adaptiveValue("padding-left", 85, 20, 0, $maxWidth, $minWidth);
    @include adaptiveValue("padding-right", 85, 20, 0, $maxWidth, $minWidth);
    @include adaptiveValue("padding-bottom", 40, 20, 0, $maxWidth, $minWidth);
    &:hover .item__image {
      opacity: 1;
    }
    .item__image {
      opacity: 0.5;
    }
  }
}

.portfolio {
  @include adaptiveValue("padding", 100, 0, 0, $maxWidth, $minWidth);
  padding-top: 0;
  gap: rem(20);
  .portfolio__content {
    gap: rem(20);
  }
  .content__item {
    img {
      @include adaptiveValue("max-width", 170, 70, 0, $maxWidth, $minWidth);
    }
  }
}
