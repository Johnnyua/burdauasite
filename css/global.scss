@import "extends.scss";
@import "mixins.scss";
@import "variable.scss";
@import "function.scss";
@import "ui.scss";

body {
  background-color: $mainColor;
  color: $colorBlack;
  font-family: $fontfamily;
  font-size: $defaultFontSize;
  // @include adaptiveValue("line-height",$minLineHeight, $maxLineHeight, $maxWidth, $minWidth);
  line-height: $defaultLineHeight;
  font-weight: $defaultFontWeight;
}

.on_top_window {
  color: #fff;
  width: 40px;
  height: 40px;
  text-align: center;
  border: 1px solid $colorBlack;
  border-radius: 50%;
  padding-top: 10px;
  position: fixed;
  z-index: 10000;
  bottom: 40px;
  right: 10px;
  opacity: 0.5;
  box-shadow: 5px 5px 5px $colorGrey;
  .icon_arrow__link {
    position: absolute;
    top: 0;
    left: 0;
    transform: rotate(-90deg);
  }
  &:hover {
    opacity: 1;
    transition: opacity 0.5s ease-in-out 0s;
  }
}

.wrapper {
  flex-direction: column;
  min-height: 100vh;
  margin: 0 auto;
  max-width: $maxWidth + px;
  width: 100%;
  overflow-x: hidden;
}

.display-none {
  display: none;
}
// Container
.container,
.container_fluid,
.container_block {
  margin: 0 auto;
  @media (max-width: rem($bp1)) {
    max-width: $bp1 + px;
  }
  height: 100%;
  padding: 0 rem(15);
}
.container {
  max-width: rem($containerWidth);
}

.container_fluid {
  max-width: rem($containerWidthFluid);
}

.container_block {
  max-width: rem($containerWidthBlock);
}
// End container

// Text
.text__default {
  font-size: $defaultFontSize;
  line-height: $defaultLineHeight;
  font-weight: $defaultFontWeight;
}
.main__title {
  @include adaptiveFont(75, 34, $maxWidth, $bp1);
  font-weight: 800;
}

.section__title {
  @include adaptiveFont(46, 28, $maxWidth, $bp1);
  font-weight: 700;
  @media (max-width: rem($bp1)) {
    font-weight: 800;
  }
}
.section__title_extrabold {
  font-size: rem(46);
  font-weight: 800;
}
.section__subtitle {
  @include adaptiveFont(46, 18, $maxWidth, $bp1);
  font-weight: 800;
}
.card__title {
  @include adaptiveFont(28, 18, $maxWidth, $bp1);
  font-weight: 700;
  @media (max-width: rem($bp1)) {
    font-weight: 800;
  }
}
.card__title_semibold {
  font-size: rem(28);
  font-weight: 600;
  text-transform: uppercase;
}
.card__title_bold {
  font-size: rem(28);
  font-weight: 700;
  text-transform: uppercase;
}

.card__text {
  @include adaptiveFont(28, 14, $maxWidth, $bp1);
  font-weight: 600;
  @media (max-width: rem($bp1)) {
    font-weight: 700;
  }
}

.content__text {
  @include adaptiveFont(28, 18, $maxWidth, $bp1);
  font-weight: 600;
  @media (max-width: rem($bp1)) {
    font-weight: 400;
  }
}

.title__subtitle {
  @include adaptiveFont(28, 18, $maxWidth, $bp1);
  font-weight: 800;
  // margin: 0 0 rem(10) 0;
  padding: rem(10) 0;
  @media (max-width: rem($bp1)) {
    font-weight: 700;
  }
}

.text__bold {
  font-size: rem(18);
  font-weight: 800;
  @media (max-width: rem($bp1)) {
    font-weight: 700;
  }
}

.text__link {
  @include adaptiveFont(18, 14, $maxWidth, $bp1);
  font-weight: 800;
  @media (max-width: rem($bp1)) {
    font-weight: 700;
  }
}

.main__title,
.section__title,
.section__subtitle,
.title__subtitle,
.title__link {
  text-transform: uppercase;
  text-align: center;
}

// End Text

// Colors classes
.c_cyan {
  color: $colorCyan;
}
.c_green {
  color: $colorGreen;
}
.c_orange {
  color: $colorOrange;
}
.c_purpule {
  color: $colorPurpule;
}
.c_red {
  color: $colorRed;
}
.c_grey {
  color: $colorGrey;
}
.c_dgrey {
  color: $colorDarkGrey;
}
// End colors classes

// Flex
.menu,
.content {
  @include dFlexRow(center, center);
}
.menu__list,
.content__list {
  @include dFlexRow(center, center);
}
.content__item {
  @include dFlexRow(space-between, center);
}

.submenu {
  .submenu__list {
    // display: grid;
    // grid-template-columns: repeat(auto-fit, minmax(rem(110), 1fr));
    @include dFlexRow(center, center);
    background-color: $colorHome;
    gap: rem(1);
    text-align: center;
  }
  .submenu__item {
    flex: 1 0 rem(185);
    background-color: $colorBlack;
    position: relative;
    color: $colorHome;
    z-index: 0;
    padding: rem(11) 0;
    text-align: center;
    &:hover {
      background-color: $colorDarkGrey;
    }
  }
}
.title_baseline {
  @include dFlexRow(center, baseline);
  gap: rem(10);
}
//End flex

// Grid
.cards {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(rem(270), 1fr));
}
.cards__slides {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(rem(340), 1fr));
  @media (min-width: rem($bp3)) {
    grid-template-columns: repeat(3, 1fr);
  }
}

.cards__slides__item,
.cards__item {
  position: relative;
  display: grid;
  grid-auto-flow: row;
  grid-template: auto 1fr minmax(40px, auto) / 1fr;
  row-gap: rem(20);
  justify-items: start;
  // @include adaptiveValue("padding-top", 40, 20, 0, $maxWidth, $minWidth);
  // @include adaptiveValue("padding-left", 85, 20, 0, $maxWidth, $minWidth);
  // @include adaptiveValue("padding-right", 85, 20, 0, $maxWidth, $minWidth);
  // @include adaptiveValue("padding-bottom", 40, 20, 0, $maxWidth, $minWidth);
  &.item_big {
    @media (min-width: rem($bp1)) {
      grid-column: span 2;
    }
  }
  .cards__item__image {
    position: absolute;
    width: 100%;
    z-index: -1;
  }
  .item__subtitle {
    color: $colorHome;
    &::after {
      @include lineBeforeAfter(50%, 2px, $colorHome);
    }
  }
  .item__text {
    // display: grid;
    // grid-auto-flow: row;
    @include dFlexColumn(center, flex-start);
    flex-wrap: wrap;
    @include adaptiveValue("row-gap", 20, 10, 0, $maxWidth, $minWidth);
    // max-height: rem(250);
    overflow: hidden;
    text-overflow: ellipsis;
    .text__title {
      flex-grow: 1;
    }
    .text__subtitle {
      // position: relative;
      flex-grow: 1;
      text-align: start;
      &::after {
        // position: absolute;
        left: 0;
        @include lineBeforeAfter(50%, 2px, $colorHome);
        margin: rem(10) 0;
        // @include adaptiveValue("margin-top", 20, 10, 0, $maxWidth, $minWidth);
      }
    }
  }
  .item__btn {
    justify-self: start;
  }
}

.cards__item {
  display: grid;
  grid-auto-flow: row;
  grid-template: max-content 1fr auto / 1fr;
  justify-items: start;
  // row-gap: rem(20);
  // @include adaptiveValue("padding-top", 40, 20, 0, $maxWidth, $minWidth);
  // @include adaptiveValue("padding-left", 85, 20, 0, $maxWidth, $minWidth);
  // @include adaptiveValue("padding-right", 85, 20, 0, $maxWidth, $minWidth);
  // @include adaptiveValue("padding-bottom", 40, 20, 0, $maxWidth, $minWidth);
  @include adaptiveValue("row-gap", 20, 10, 0, $maxWidth, $minWidth);
  .item__content {
    display: grid;
    grid-auto-flow: row;
    grid-template: auto 1fr minmax(40px, auto) / 1fr;
    justify-items: start;
    @include adaptiveValue("padding-top", 40, 20, 0, $maxWidth, $minWidth);
    @include adaptiveValue("padding-left", 85, 20, 0, $maxWidth, $minWidth);
    @include adaptiveValue("padding-right", 85, 20, 0, $maxWidth, $minWidth);
    @include adaptiveValue("padding-bottom", 40, 20, 0, $maxWidth, $minWidth);
  }
}
.cards__list {
  width: 100%;
  // @include dFlexRow(center, flex-start);
}

.item__btn {
  @include dFlexRow(center, center);
  // justify-self: center;
}



// Slides
.button-prev,
.button-next {
  display: none;
  @media (min-width: rem($bp2)) {
    display: block;
    cursor: pointer;
    position: absolute;
    top: 50%;
    z-index: 1;
    &.swiper-button-disabled {
      display: none;
    }
  }
}

.button-prev {
  left: 0;
  transform: rotate(180deg) translateY(50%);
}
.button-next {
  right: 0;
  transform: translateY(-50%);
}
.pagination {
  margin: auto;
  text-align: center;
  .swiper-pagination-bullet {
    width: rem(10);
    height: rem(10);
    margin: 0 rem(10) !important;
    background-color: transparent;
    border: 1px $colorDarkGrey solid;
    &.swiper-pagination-bullet-active {
      background-color: $colorDarkGrey;
    }
  }
}
