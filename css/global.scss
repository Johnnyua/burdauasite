@import "extends.scss";
@import "mixins.scss";
@import "variable.scss";
@import "function.scss";
@import "ui.scss";

body {
  background-color: $mainColor;
  color: $colorBlack;
  font-family: $fontfamily;
  font-size: $defaultFontSize;
  line-height: $defaultLineHeight;
  font-weight: $defaultFontWeight;
}

.wrapper {
  flex-direction: column;
  min-height: 100vh;
  margin: 0 auto;
  max-width: $maxWidth + px;
  width: 100%;
  overflow-x: hidden;
}

.display-none {
  display: none;
}
// Container
.container,
.container_fluid {
  margin: 0 auto;
  @media (max-width: rem($bp1)) {
    max-width: $bp1 + px;
  }
  height: 100%;
  padding: 0 rem(15);
}
.container {
  max-width: rem($containerWidth);
}

.container_fluid {
  max-width: rem($containerWidthFluid);
}
// End container

// Text
.main__title {
  @include adaptiveFont(75, 34, $maxWidth, $bp1);
  font-weight: 800;
  span {
    color: $colorBlue;
  }
}

.title__section {
  @include adaptiveFont(46, 28, $maxWidth, $bp1);
  font-weight: 700;
  @media (max-width: $bp1 + px) {
    font-weight: 800;
  }
}

.card__title {
  @include adaptiveFont(28, 18, $maxWidth, $bp1);
  font-weight: 700;
  @media (max-width: $bp1 + px) {
    font-weight: 800;
  }
}

.card__text {
  @include adaptiveFont(28, 14, $maxWidth, $bp1);
  font-weight: 600;
  @media (max-width: $bp1 + px) {
    font-weight: 700;
  }
}

.main_title span,
.title__section {
  color: $colorBlue;
}

.title__subtitle {
  @include adaptiveFont(28, 18, $maxWidth, $bp1);
  font-weight: 800;
  margin: 0 0 rem(10) 0;
  padding: rem(10) rem(30);
  @media (max-width: rem($bp1)) {
    font-weight: 700;
  }
}

.text {
  font-size: rem(18);
  font-weight: 800;
  @media (max-width: rem($bp1)) {
    font-weight: 700;
  }
}

.text__link {
  @include adaptiveFont(18, 14, $maxWidth, $bp1);
  font-weight: 800;
  @media (max-width: rem($bp1)) {
    font-weight: 700;
  }
}

.title,
.title__section,
.title__subtitle,
.title__link {
  text-transform: uppercase;
  text-align: center;
}

// End Text

// Colors classes
.c_cyan {
  color: $colorCyan;
}
.c_green {
  color: $colorGreen;
}
.c_orange {
  color: $colorOrange;
}
.c_purpule {
  color: $colorPurpule;
}
.c_red {
  color: $colorRed;
}
.c_grey {
  color: $colorGrey;
}
.c_dgrey {
  color: $colorDarkGrey;
}
// End colors classes

// Menu
.menu,
.content {
  @include dFlexRow(center, center);
  .menu__list,
  .content__list {
    @include dFlexRow(center, center);
  }
}

.sub__menu__list {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(rem(110), 1fr));
}
//End menu

.cards {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(340px, 1fr));
  @media (min-width: rem($bp3)) {
    grid-template-columns: repeat(3, 1fr);
  }
  .cards__item {
    display: grid;
    grid-auto-flow: row;
    grid-template: auto 1fr minmax(40px, auto) / 1fr;
    @include adaptiveValue("row-gap", 30, 10, 0, $maxWidth, $minWidth);

    @include adaptiveValue("padding-top", 40, 20, 0, $maxWidth, $minWidth);
    @include adaptiveValue("padding-left", 85, 20, 0, $maxWidth, $minWidth);
    @include adaptiveValue("padding-right", 85, 20, 0, $maxWidth, $minWidth);
    @include adaptiveValue("padding-bottom", 40, 20, 0, $maxWidth, $minWidth);
    
  }
  .cards__item_big {
  }
  .cards__title {
  }
  .cards__text {
  }
  .cards__btn {
    @include dFlexRow(center, center);
    justify-self: center;
  }
}

.action {
  @include adaptiveValue("margin-bottom", 90, 50, 0, $maxWidth, $minWidth);
}
